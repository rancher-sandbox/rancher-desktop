
info:
  title: Rancher Desktop API
  version: 0.0.1
paths:
  /:
    get:
      operationId: listEndpoints
      summary: List all endpoints.
      responses:
        '200':
          description: A list of endpoints
          content:
            application/json:
              schema:
                type: array
                items: { type: string }

  /v0:
    get:
      operationId: listV0Endpoints
      summary: List all version zero endpoints.
      responses:
        '200':
          description: A list of version 0 endpoints, of which there are none.
          content:
            application/json:
              schema:
                type: array
                items: { type: string }

  /v1:
    get:
      operationId: listV1Endpoints
      summary: List all version one endpoints.
      responses:
        '200':
          description: A list of endpoints
          content:
            application/json:
              schema:
                type: array
                items: { type: string }

  /v1/about:
    get:
      operationId: getAbout
      summary: Returns a description of the endpoints
      responses:
        '200':
          description: A note about endpoints not being forwards-compatible.
          content:
            text/plain:
              schema:
                type: string

  /v1/diagnostic_categories:
    get:
      operationId: diagnosticCategories
      summary: Return a list of the category names for the Diagnostics component. Takes no parameters.
      responses:
        '200':
          description: A list of the category names.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /v1/diagnostic_checks:
    get:
      operationId: diagnosticChecks
      summary: Return all the checks, optionally filtered by specified category and/or checkID.
      parameters:
      - in: query
        name: category
      - in: query
        name: checkID
      responses:
        '200':
          description: A list of check objects. An invalid or unrecognized query parameter returns (200, empty array)
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/diagnostics"
    post:
      operationId: diagnosticRunChecks
      summary: Run all diagnostic checks, and return any results.
      responses:
        '200':
          description: A list of check results.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/diagnostics"

  /v1/diagnostic_ids:
    get:
      operationId: diagnosticIDsForCategory
      summary: >-
        Return a list of the check IDs for the Diagnostics category,
        or 404 if there is no such `category`.
        Specifying an existing category with no checks
        will return status code 200 and an empty array.
      parameters:
      - in: query
        name: category
      responses:
        '200':
          description: A list of the check IDs for the specified category.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: The category is not recognized.


  /v1/extensions:
    get:
      operationId: listExtensions
      summary: List currently-installed RDX extensions.
      responses:
        '200':
          description: A list of installed RDX extensions.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    version:
                      type: string
                    metadata:
                      type: object
                    labels:
                      type: object
                      additionalProperties:
                        type: string
        '503':
          description: >-
            The extension manager has not been loaded yet.  The client should
            retry the request at some future point in time.

  /v1/extensions/install:
    post:
      operationId: installExtension
      summary: Install an RDX extension
      parameters:
      - in: query
        name: id
      responses:
        '201':
          description: The extension was installed.
        '204':
          description: The extension was already installed.
        '400':
          description: There was an issue with the parameters.
        '422':
          description: The extension could not be installed.
          content:
            text/plain:
              schema:
                type: string
        '503':
          description: An internal error occurred.

  /v1/extensions/uninstall:
    post:
      operationId: uninstallExtension
      summary: Uninstall an RDX extension
      parameters:
      - in: query
        name: id
      responses:
        '201':
          description: The extension was uninstalled.
        '204':
          description: The extension was already uninstalled.
        '400':
          description: There was an issue with the parameters.
        '422':
          description: The extension could not be installed.
          content:
            text/plain:
              schema:
                type: string
        '503':
          description: An internal error occurred.

  /v1/factory_reset:
    put:
      operationId: factoryReset
      summary: Factory reset Rancher Desktop, losing user data
      requestBody:
        description: JSON block giving factory reset options.
        content:
          application/json:
            schema:
              type: object
              properties:
                keepSystemImages:
                  type: boolean
        required: true
      responses:
        '202':
          description: The application is performing a factory reset.
        '400':
          description: An error occurred

  /v1/port_forwarding:
    post:
      operationId: createPortForward
      summary: Create a new port forwarding
      requestBody:
        description: JSON block consisting of the port forwarding details
        content:
          application/json:
            schema:
              type: object
              properties:
                namespace:
                  type: string
                service:
                  type: string
                k8sPort:
                  type:
                  - string
                  - integer
                hostPort:
                  type: integer
        required: true
      responses:
        '200':
          description: The port forwarding was created or already exists; the response contains the listening host port.
          content:
            text/plain:
              schema:
                type: integer
        '400':
          description: The port forwarding could not be created.
    delete:
      operationId: deletePortForward
      summary: Delete a port forwarding
      parameters:
      - in: query
        name: namespace
      - in: query
        name: service
      - in: query
        name: k8sPort
      responses:
        '200':
          description: The port forwarding was deleted or doesn't exist.
        '400':
          description: The port forwarding could not be deleted.

  /v1/propose_settings:
    put:
      operationId: proposeSettings
      summary: >-
        Propose some settings and determine if the backend needs to be restarted
        or reset (losing user data).
      requestBody:
        description: >-
          JSON block consisting of some or all of the current preferences,
          with changes applied to any number of settings the backend supports changing this way.
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/preferences"
        required: true
      responses:
        '202':
          description: A description of the effects of the proposed settings on the backend.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    current: {}
                    desired: {}
                    severity:
                      type: string
                      enum: [ restart, reset ]
        '400':
          description: The proposed settings were not valid.
          content:
            text/plain:
              schema:
                type: string

  /v1/settings:
    get:
      operationId: listSettings
      summary:  List the current preference settings
      responses:
        '200':
          description: The current preferences in JSON format
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/preferences"
    put:
      operationId: updateSettings
      summary:  Updates the specified preference settings
      requestBody:
        description: >-
          JSON block consisting of some or all of the current preferences,
          with changes applied to any number of settings the backend supports changing this way.
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/preferences"
        required: true
      responses:
        '202':
          description: The settings were accepted.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: The proposed settings were not valid.
          content:
            text/plain:
              schema:
                type: string

  /v1/settings/locked:
    get:
      operationId: listLockedSettings
      summary:  List the current locked settings
      responses:
        '200':
          description: The locked preferences in JSON format
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/preferences"

  /v1/shutdown:
    put:
      operationId: shutdownApp
      summary:  Shuts down Rancher Desktop
      responses:
        '202':
          description: The application is in the process of shutting down.
          content:
            text/plain:
              schema:
                type: string

  /v1/snapshots:
    get:
      operationId: listSnapshots
      summary:  List the snapshots
      responses:
        '200':
          description: The snapshots list in JSON format
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref" : "#/components/schemas/snapshot"
    post:
      operationId: createSnapshot
      summary: Creates a new snapshot
      responses:
        '200':
          description: The snapshot was created.
        '400':
          description: The snapshot could not be created.
          content:
            text/plain:
              schema:
                type: string
    delete:
      operationId: deleteSnapshot
      summary:  Deletes a snapshot
      parameters:
      - in: query
        name: name
      responses:
        '200':
          description: The snapshot was deleted.
        '404':
          description: The snapshot could not be deleted.
          content:
            text/plain:
              schema:
                type: string

  /v1/snapshots/cancel:
    post:
      operationId: cancelSnapshot
      summary: Cancels active snapshot operation
      responses:
        '200':
          description: The snapshot operation was canceled.
        '400':
          description: The snapshot could not be canceled.
          content:
            text/plain:
              schema:
                type: string

  /v1/snapshot/restore:
    post:
      operationId: restoreSnapshot
      summary: Restore a snapshot
      parameters:
      - in: query
        name: name
      responses:
        '202':
          description: The snapshot was restored.
        '404':
          description: The snapshot could not be restored.
          content:
            text/plain:
              schema:
                type: string

  /v1/transient_settings:
    get:
      operationId: listTransientSettings
      summary:  List the current transient settings
      responses:
        '200':
          description: The current transient settings in JSON format
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/transientSettings"
    put:
      operationId: updateTransientSettings
      summary:  Updates application transient settings
      requestBody:
        description: JSON block consisting of transient settings
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/transientSettings"
        required: true
      responses:
        '202':
          description: The settings were accepted.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: The proposed transient settings were not valid.
          content:
            text/plain:
              schema:
                type: string

  /v1/backend_state:
    get:
      operationId: getBackendState
      summary:  Get the current backend state
      responses:
        '200':
          description: The current backend state
          content:
            application/json:
              schema:
                type: object
                required:
                  - vmState
                  - locked
                properties:
                  vmState:
                    type: string
                  locked:
                    type: boolean
    put:
      operationId: setBackendState
      summary:  Set the desired backend state
      requestBody:
        description: >-
          JSON block consisting of some or all of desired backend state, with changes applied
          to the parts of backend state that are specified.
        content:
          application/json:
            schema:
              type: object
              properties:
                vmState:
                  type: string
                locked:
                  type: boolean
        required: true
      responses:
        '202':
          description: The desired backend state was accepted.
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    preferences:
      type: object
      properties:
        application:
          type: object
          properties:
            adminAccess:
              type: boolean
              x-rd-platforms: [darwin, linux] # Only in the specified platforms
              x-rd-usage: enable privileged operations
            debug:
              type: boolean
              x-rd-usage: generate more verbose logging
            extensions:
              type: object
              properties:
                allowed:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      x-rd-hidden: true
                    list:
                      type: array
                      items:
                        type: string
                        x-rd-hidden: true
                installed:
                  type: object
                  x-rd-usage: installed extensions and their tag
                  additionalProperties:
                    type: string
            pathManagementStrategy:
              type: string
              enum: [manual, rcfiles]
              x-rd-platforms: [darwin, linux]
              x-rd-usage: update PATH to include ~/.rd/bin
            telemetry:
              type: object
              properties:
                enabled:
                  type: boolean
                  x-rd-usage: allow collection of anonymous statistics
            updater:
              type: object
              properties:
                enabled:
                  type: boolean
                  x-rd-usage: automatically update to the latest release
            autoStart:
              type: boolean
              x-rd-usage: start app when logging in
            startInBackground:
              type: boolean
              x-rd-usage: start app without window
            hideNotificationIcon:
              type: boolean
              x-rd-usage: don't show notification icon
            window:
              type: object
              properties:
                quitOnClose:
                  type: boolean
                  x-rd-usage: terminate app when the main window is closed
        containerEngine:
          type: object
          properties:
            name:
              type: string
              # TODO "docker" setting should be a hidden alias of "moby".
              # Why have two values for exactly the same thing?
              enum: [containerd, docker, moby]
              x-rd-aliases: [container-engine]
              x-rd-usage: set engine
            allowedImages:
              type: object
              properties:
                enabled:
                  type: boolean
                  x-rd-usage: only allow images to be pulled that match the allowed patterns
                patterns:
                  type: array
                  # TODO It is not yet possible to specify array/list values with `rdctl set`
                  x-rd-usage: allowed image names
                  items:
                    type: string
        virtualMachine:
          type: object
          properties:
            memoryInGB:
              type: integer
              minimum: 1
              x-rd-platforms: [darwin, linux]
              x-rd-usage: reserved RAM size
            numberCPUs:
              type: integer
              minimum: 1
              x-rd-platforms: [darwin, linux]
              x-rd-usage: reserved number of CPUs
            type:
              type: string
              enum: [qemu, vz]
              x-rd-platforms: [darwin]
            useRosetta:
              type: boolean
              x-rd-platforms: [darwin]
            mount:
              type: object
              x-rd-platforms: [darwin, linux]
              properties:
                type:
                  type: string
                  enum: [reverse-sshfs, 9p, virtiofs]
                  x-rd-usage: how directories are shared; 9p is experimental.
        kubernetes:
          type: object
          properties:
            version:
              type: string
              x-rd-aliases: [kubernetes-version]
              x-rd-usage: choose which version of Kubernetes to run
            port:
              type: integer
              x-rd-usage: apiserver port
            enabled:
              type: boolean
              x-rd-aliases: [kubernetes-enabled]
              x-rd-usage: run Kubernetes
            options:
              type: object
              properties:
                traefik:
                  type: boolean
                  x-rd-usage: install and run traefik
                flannel:
                  type: boolean
                  x-rd-aliases: [flannel-enabled]
                  x-rd-usage: use flannel networking; disable to install your own CNI
            ingress:
              type: object
              properties:
                localhostOnly:
                  type: boolean
                  x-rd-platforms: [win32]
                  x-rd-usage: bind services to 127.0.0.1 instead of 0.0.0.0
        experimental:
          type: object
          properties:
            containerEngine:
              type: object
              properties:
                webAssembly:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      x-rd-usage: enable support for containerd-wasm shims
            kubernetes:
              type: object
              properties:
                options:
                  type: object
                  properties:
                    spinkube:
                      type: boolean
                      x-rd-usage: install spin operator
            virtualMachine:
              type: object
              properties:
                mount:
                  type: object
                  x-rd-platforms: [darwin, linux]
                  properties:
                    9p:
                      type: object
                      properties:
                        securityModel:
                          type: string
                          enum: [passthrough, mapped-xattr, mapped-file, none]
                        protocolVersion:
                          type: string
                          enum: [9p2000, 9p2000.u, 9p2000.L]
                        msizeInKib:
                          type: integer
                          minimum: 4
                          x-rd-usage: maximum packet size
                        cacheMode:
                          type: string
                          enum: [none, loose, fscache, mmap]
                    inotify:
                      type: boolean
                      x-rd-platforms: [darwin, linux]
                      x-rd-usage: file modification notification support, only for writable mounts
                proxy:
                  type: object
                  x-rd-platforms: [win32]
                  x-rd-usage: configure proxy address
                  properties:
                    enabled:
                      type: boolean
                      x-rd-usage: redirect the traffic to the configured proxy address
                    address:
                      type: string
                      x-rd-usage: proxy address
                    password:
                      type: string
                      x-rd-usage: if needed the password to connect to the proxy
                    port:
                      type: integer
                      x-rd-usage: proxy port
                    username:
                      type: string
                      x-rd-usage: if needed the username to connect to the proxy
                    noproxy:
                      type: array
                      x-rd-usage: list of hostname to exclude from using the proxy
                      items: { type: string }
                sshPortForwarder:
                  type: boolean
                  x-rd-platforms: [darwin, linux]
                  x-rd-usage: use SSH for port forwarding instead of gRPC
        WSL:
          type: object
          x-rd-platforms: [win32]
          # TODO It is not yet possible to configure this via `rdctl set`.
          x-rd-usage: make container engine and Kubernetes available in these WSL2 distros
          properties:
            integrations:
              type: object
              additionalProperties: true
        portForwarding:
          type: object
          properties:
            includeKubernetesServices:
              type: boolean
              x-rd-usage: show Kubernetes system services on Port Forwarding page
        images:
          type: object
          properties:
            showAll:
              type: boolean
              x-rd-usage: show system images on Images page
            namespace:
              type: string
              x-rd-usage: select only images from this namespace (containerd only)
        containers:
          type: object
          properties:
            showAll:
              type: boolean
              x-rd-usage: show system containers on Containers page
            namespace:
              type: string
              x-rd-usage: select only namespaces from this namespace (containerd only)
        diagnostics:
          type: object
          properties:
            showMuted:
              type: boolean
              x-rd-usage: unhide muted diagnostics
            mutedChecks:
              type: object
              # TODO It is not possible to modify this setting via `rdctl set`.
              x-rd-usage: diagnostic ids that have been muted
              additionalProperties: true

    diagnostics:
      type: object
      properties:
        last_update:
          type: string
          format: date-time
          example: "1970-01-01T00:00:00.000Z"
        checks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              category:
                type: string
              documentation:
                type: string
              description:
                type: string
              passed:
                type: boolean
              mute:
                type: boolean
              fixes:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
    transientSettings:
      type: object
      properties:
        noModalDialogs:
          type: boolean
        preferences:
          type: object
          properties:
            navItem:
              type: object
              properties:
                current:
                  type: string
                currentTabs:
                  type: object
                  additionalProperties: true
