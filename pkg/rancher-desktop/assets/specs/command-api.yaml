openapi: "3.0.0"
info:
  title: "Rancher Desktop API"
  version: 0.0.1
paths:
  /v0/factory_reset:
    put:
      operationId: factoryReset
      summary: Factory reset Rancher Desktop, losing user data
      requestBody:
        description: >-
          JSON block giving factory reset options.
        content:
          application/json:
            schema:
              type: object
              properties:
                keepSystemImages:
                  type: boolean
        required: true
      responses:
        '202':
          description: The application is performing a factory reset.
        '400':
          description: An error occurred

  /v0/propose_settings:
    put:
      operationId: proposeSettings
      summary: >-
        Propose some settings and determine if the backend needs to be restarted
        or reset (losing user data).
      requestBody:
        description: >-
          JSON block consisting of some or all of the current preferences,
          with changes applied to any number of settings the backend supports changing this way.
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/preferences"
        required: true
      responses:
        '202':
          description: >-
            A description of the effects of the proposed settings on the
            backend.
          content:
            "application/json":
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    current: {}
                    desired: {}
                    severity:
                      type: string
                      enum: [ restart, reset ]
        '400':
          description: >-
            The proposed settings were not valid.
          content:
            "text/plain":
              schema:
                type: string


  /v0/settings:
    get:
      operationId: listSettings
      summary:  List the current preference settings
      responses:
        '200':
          description: >-
            The current preferences in JSON format
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/preferences"
    put:
      operationId: updateSettings
      summary:  Updates the specified preference settings
      requestBody:
        description: >-
          JSON block consisting of some or all of the current preferences,
          with changes applied to any number of settings the backend supports changing this way.
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/preferences"
        required: true
      responses:
        '202':
          description: >-
            The settings were accepted.
          content:
            "text/plain":
              schema:
                type: string
        '400':
          description: >-
            The proposed settings were not valid.
          content:
            "text/plain":
              schema:
                type: string

  /v0/shutdown:
    put:
      operationId: shutdownApp
      summary:  Shuts down Rancher Desktop
      responses:
        '202':
          description: >-
            The application is in the process of shutting down.
          content:
            "text/plain":
              schema:
                type: string

  /v0/diagnostic_categories:
    get:
      operationId: diagnosticCategories
      summary: >-
        Return a list of the category names for the Diagnostics component. Takes no parameters.
      responses:
        '200':
          description: >-
            A list of the category names.
          content:
            "application/json":
              schema:
                type: array
                items:
                  type: string

  /v0/diagnostic_ids:
    get:
      operationId: diagnosticIDsForCategory
      summary: >-
        Return a list of the check IDs for the Diagnostics category,
        or 404 if there is no such `category`.
        Specifying an exiting category with no checks
        will return status code 200 and an empty array.
      parameters:
        - in: query
          name: category
      responses:
        '200':
          description: >-
            A list of the check IDs for the specified category.
          content:
            "application/json":
              schema:
                type: array
                items:
                  type: string
        '404':
          description: The category is not recognized.


  /v0/diagnostic_checks:
    get:
      operationId: diagnosticChecks
      summary: >-
        Return all the checks, optionally filtered by specified category and/or checkID.
      parameters:
        - in: query
          name: category
        - in: query
          name: checkID
      responses:
        '200':
          description: >-
            A list of check objects. An invalid or unrecognized query parameter returns (200, empty array)
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/diagnostics"
    post:
      operationId: diagnosticRunChecks
      summary: Run all diagnostic checks, and return any results.
      responses:
        '200':
          description: >-
            A list of check results.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/diagnostics"

  /v0/transient_settings:
    get:
      operationId: listTransientSettings
      summary:  List the current transient settings
      responses:
        '200':
          description: >-
            The current transient settings in JSON format
          content:
            application/json:
              schema:
                "$ref" : "#/components/schemas/transientSettings"
    put:
      operationId: updateTransientSettings
      summary:  Updates application transient settings
      requestBody:
        description: >-
          JSON block consisting of transient settings
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/transientSettings"
        required: true
      responses:
        '202':
          description: >-
            The settings were accepted.
          content:
            "text/plain":
              schema:
                type: string
        '400':
          description: >-
            The proposed transient settings were not valid.
          content:
            "text/plain":
              schema:
                type: string

components:
  schemas:
    preferences:
      type: object
      properties:
        application:
          type: object
          properties:
            adminAccess:
              type: boolean
            debug:
              type: boolean
            pathManagementStrategy:
              type: string
              enum: ['manual', 'rcfiles']
            telemetry:
              type: object
              properties:
                enabled:
                  type: boolean
            updater:
              type: object
              properties:
                enabled:
                  type: boolean
        containerEngine:
          type: object
          properties:
            name:
              type: string
              enum: ['containerd', 'moby', 'docker']
              x-rd-usage: Set engine to containerd or moby (aka docker).
              x-rd-aliases:
                - "container-engine"
            imageAllowList:
              type: object
              properties:
                enabled:
                  type: boolean
                locked:
                  type: boolean
                patterns:
                  type: array
                  items:
                    type: string
        virtualMachine:
          type: object
          properties:
            memoryInGB:
              type: integer
              minimum: 1
            numberCPUs:
              type: integer
              minimum: 1
            hostResolver:
              type: boolean
            experimental:
              type: object
              properties:
                socketVMNet:
                  type: boolean
        kubernetes:
          type: object
          properties:
            version:
              type: string
              x-rd-usage: Choose which version of kubernetes to run.
              x-rd-aliases:
                - "kubernetes-version"
            port:
              type: integer
            enabled:
              type: boolean
              x-rd-usage: Control whether kubernetes runs in the backend.
              x-rd-aliases:
                - "kubernetes-enabled"
            options:
              type: object
              properties:
                traefik:
                  type: boolean
                flannel:
                  type: boolean
                  x-rd-usage: >-
                    Control whether flannel is enabled.
                    Use to disable flannel so you can install your own CNI.
                  x-rd-aliases:
                    - "flannel-enabled"
        WSL:
          type: object
          properties:
            integrations:
              type: object
              additionalProperties: true
        portForwarding:
          type: object
          properties:
            includeKubernetesServices:
              type: boolean
        images:
          type: object
          properties:
            showAll:
              type: boolean
            namespace:
              type: string
        diagnostics:
          type: object
          properties:
            showMuted:
              type: boolean
            mutedChecks:
              type: object
              additionalProperties: true
    diagnostics:
      type: object
      properties:
        last_update:
          type: string
          format: date-time
          example: "1970-01-01T00:00:00.000Z"
        checks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              category:
                type: string
              documentation:
                type: string
              description:
                type: string
              passed:
                type: boolean
              mute:
                type: boolean
              fixes:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
    transientSettings:
      type: object
      properties:
        noModalDialogs:
          type: boolean
        preferences:
          type: object
          properties:
            navItem:
              type: object
              properties:
                current:
                  type: string
                currentTabs:
                  type: object
                  additionalProperties: true
